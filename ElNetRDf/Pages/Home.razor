@namespace Elnet.Pages
@using Elnet.Services
@using Elnet.Components
@using Elnet.Services.Interfaces
@inject ISparqlQueryHelper _sparqlQueryHelper

@page "/"

<PageTitle>Root Networks</PageTitle>

<h1>Root networks</h1>
<ul>
    @foreach ((Uri networkUri, string networkName) in _networks)
    {
        <li>
            <Network NetworkIri="@networkUri" NetworkName="@networkName" />
        </li>
    }
</ul>

@code {
    List<(Uri, string)> _networks = new();
    private bool _shouldRender = false;

    protected override bool ShouldRender() => _shouldRender;
    
    protected override async Task OnInitializedAsync()
    {
        var queryString = await _sparqlQueryHelper.ReadQuery("root_networks");

        var queryResults = _sparqlQueryHelper. GetSparqlResult(queryString);
        await foreach (var queryResult in queryResults)
        {
            var networkName = SparqlQueryHelper.getObjectQueryBindingValue(queryResult, "name");
            var networkIri = SparqlQueryHelper.getObjectQueryBindingValue(queryResult, "elnet");
            _networks.Add((new Uri(networkIri), networkName));
            _shouldRender = true;
        }

    }

}